AWSTemplateFormatVersion: '2010-09-09'
Description: container cluster on ECS, security groups and cloudwatch

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: 'api'

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC the Application Load Balancer be deployed

  Subnets:
    Description: subnets the Application Load Balancer be deployed
    Type: List<AWS::EC2::Subnet::Id>

  SecurityGroup:
    Description: Security Group to apply to ALB
    Type: AWS::EC2::SecurityGroup::Id

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref EnvironmentName
      Subnets:
        - !Ref Subnets
      SecurityGroups:
        - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup

  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${EnvironmentName}-default
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP


  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: apis
      Cpu: 10
      Memory: 256
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: apitest
          Image: 666303174975.dkr.ecr.us-west-1.amazonaws.com/wm-api-test:latest
          Cpu: 10
          Memory: 256
          PortMappings:
            - ContainerPort: 8080
            - hostPort: 8080
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: '/ecs/apitest'
              awslogs-region: 'us-west-1'
              awslogs-stream-prefix: 'ecs'

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      ServiceName: apitest-service
      TaskDefinition: !Ref Task
      Cluster: !ImportValue 'apitest'
      LaunchType: FARGATE
      DesiredCount: 2
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref Subnets
          SecurityGroups:
            - !ImportValue ContainerSecurityGroup

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: 'apitest'

  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup      
    Properties:
     VpcId: !ImportValue 'VPC'
     GroupDescription: for ecs containers
     SecurityGroupIngress:
       - SourceSecurityGroupId: - !Ref LoadBalancer
         IpProtocol: -1

Outputs:

  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref LoadBalancer

  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt LoadBalancer.DNSName

  Listener:
    Description: A reference to a port 80 listener
    Value: !Ref LoadBalancerListener

  ApiEndpoint:
    Description: apitest endpoint
    Value: !Join ['', ['http://', !ImportValue DomainName, '/ecs/apitest']]
    Export:
      Name: 'BooksApiEndpoint'

  Cluster:
    Value: !Ref apitest
    Export:
      Name: 'apitest'

  ContainerSecurityGroup:
    Description: container security group
    Value: !Ref ContainerSecurityGroup
    Export:
      Name: 'ContainerSecurityGroup'
